{"code":"import _get from 'lodash.get';\r\nimport _has from 'lodash.has';\r\nimport _mapValues from 'lodash.mapvalues';\r\nimport _mapKeys from 'lodash.mapkeys';\r\nimport _values from 'lodash.values';\r\nimport _merge from 'lodash.merge';\r\nimport _transform from 'lodash.transform';\r\nimport _isEqual from 'lodash.isequal';\r\nimport _cloneDeep from 'lodash.clonedeep';\r\nimport { isObject } from \"../validators\";\r\n/**\r\n *\r\n * @param object\r\n * @param path\r\n * @param defaultValue\r\n */\r\nexport function get(object, path, defaultValue) {\r\n    return _get(object, path, defaultValue);\r\n}\r\n/**\r\n *\r\n * @param object\r\n * @param path\r\n * @returns {any}\r\n */\r\nexport function has(object, path) {\r\n    return _has(object, path);\r\n}\r\n/**\r\n *\r\n * @param collection\r\n * @param iteratee\r\n */\r\nexport function mapValues(collection, iteratee) {\r\n    return _mapValues(collection, iteratee);\r\n}\r\n/**\r\n *\r\n * @param collection\r\n * @param iteratee\r\n */\r\nexport function mapKeys(collection, iteratee) {\r\n    return _mapKeys(collection, iteratee);\r\n}\r\n/**\r\n *\r\n * @param object\r\n */\r\nexport function values(object) {\r\n    return _values(object);\r\n}\r\n/**\r\n *\r\n * @param des\r\n * @param src\r\n * @returns {any}\r\n */\r\nexport function merge(des) {\r\n    var src = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        src[_i - 1] = arguments[_i];\r\n    }\r\n    return _merge.apply(void 0, [des].concat(src));\r\n}\r\n/**\r\n *\r\n * @param object\r\n * @param base\r\n * @returns {any[]}\r\n */\r\nexport function diff(object, base) {\r\n    return changes(object, base);\r\n}\r\n/**\r\n *\r\n * @param object\r\n * @param base\r\n * @returns {any[]}\r\n */\r\nfunction changes(object, base) {\r\n    return _transform(object, function (result, value, key) {\r\n        if (!_isEqual(value, base[key])) {\r\n            result[key] = isObject(value) && isObject(base[key]) ? changes(value, base[key]) : value;\r\n        }\r\n    });\r\n}\r\n/**\r\n * @param {any} objects\r\n * @returns\r\n */\r\nexport function cloneDeep(objects) {\r\n    return _cloneDeep(objects);\r\n}\r\n//# sourceMappingURL=index.js.map","map":{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/object/index.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,YAAY,CAAC;AAC9B,OAAO,IAAI,MAAM,YAAY,CAAC;AAC9B,OAAO,UAAU,MAAM,kBAAkB,CAAC;AAC1C,OAAO,QAAQ,MAAM,gBAAgB,CAAC;AACtC,OAAO,OAAO,MAAM,eAAe,CAAC;AACpC,OAAO,MAAM,MAAM,cAAc,CAAC;AAClC,OAAO,UAAU,MAAM,kBAAkB,CAAC;AAC1C,OAAO,QAAQ,MAAM,gBAAgB,CAAC;AACtC,OAAO,UAAU,MAAM,kBAAkB,CAAC;AAE1C,OAAO,EAAC,QAAQ,EAAC,MAAM,eAAe,CAAC;AAEvC;;;;;GAKG;AACH,MAAM,cAAc,MAAM,EAAE,IAAI,EAAE,YAAa;IAC7C,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;AAC1C,CAAC;AAGD;;;;;GAKG;AACH,MAAM,cAAc,MAAM,EAAE,IAAI;IAC9B,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC5B,CAAC;AAGD;;;;GAIG;AACH,MAAM,oBAAoB,UAAU,EAAE,QAAS;IAC7C,MAAM,CAAC,UAAU,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AAC1C,CAAC;AAED;;;;GAIG;AACH,MAAM,kBAAkB,UAAU,EAAE,QAAS;IAC3C,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AACxC,CAAC;AAED;;;GAGG;AACH,MAAM,iBAAiB,MAAM;IAC3B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACzB,CAAC;AAED;;;;;GAKG;AACH,MAAM,gBAAgB,GAAG;IAAE,aAAM;SAAN,UAAM,EAAN,qBAAM,EAAN,IAAM;QAAN,4BAAM;;IAC/B,MAAM,CAAC,MAAM,gBAAC,GAAG,SAAK,GAAG,GAAE;AAC7B,CAAC;AAED;;;;;GAKG;AACH,MAAM,eAAe,MAAM,EAAE,IAAI;IAC/B,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC/B,CAAC;AAGD;;;;;GAKG;AACH,iBAAiB,MAAM,EAAE,IAAI;IAC3B,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,UAAC,MAAM,EAAE,KAAK,EAAE,GAAG;QAC3C,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC3F,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAED;;;GAGG;AACH,MAAM,oBAAoB,OAAO;IAC/B,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAC7B,CAAC"},"dts":{"name":"/Users/netanelbasal/www/FE/utils/object/index.d.ts","text":"/**\r\n *\r\n * @param object\r\n * @param path\r\n * @param defaultValue\r\n */\r\nexport declare function get(object: any, path: any, defaultValue?: any): any;\r\n/**\r\n *\r\n * @param object\r\n * @param path\r\n * @returns {any}\r\n */\r\nexport declare function has(object: any, path: any): any;\r\n/**\r\n *\r\n * @param collection\r\n * @param iteratee\r\n */\r\nexport declare function mapValues(collection: any, iteratee?: any): any;\r\n/**\r\n *\r\n * @param collection\r\n * @param iteratee\r\n */\r\nexport declare function mapKeys(collection: any, iteratee?: any): any;\r\n/**\r\n *\r\n * @param object\r\n */\r\nexport declare function values(object: any): any;\r\n/**\r\n *\r\n * @param des\r\n * @param src\r\n * @returns {any}\r\n */\r\nexport declare function merge(des: any, ...src: any[]): any;\r\n/**\r\n *\r\n * @param object\r\n * @param base\r\n * @returns {any[]}\r\n */\r\nexport declare function diff(object: any, base: any): any;\r\n/**\r\n * @param {any} objects\r\n * @returns\r\n */\r\nexport declare function cloneDeep(objects: any): any;\r\n"}}
